{"ast":null,"code":"var _jsxFileName = \"/Users/masahiromatsui/gaming-next/pages/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { RUG } from 'react-upload-gallery'; // Add style manually\n\nimport 'react-upload-gallery/dist/style.css'; // or scss\n\nimport React from 'react';\nimport App, { Container } from 'next/app';\nexport default class MyApp extends App {\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nconst IndexPage = () => __jsx(RUG, {\n  action: \"/api/upload\" // upload route\n  ,\n  source: response => response.source // response image source\n  ,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n});\n\nIndexPage.getInitialProps = async ({\n  req\n}) => {\n  const userAgent = req ? req.headers['user-agent'] || '' : navigator.userAgent;\n  return {\n    userAgent\n  };\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/masahiromatsui/gaming-next/pages/index.tsx"],"names":["RUG","React","App","Container","MyApp","getInitialProps","Component","router","ctx","pageProps","render","props","IndexPage","response","source","req","userAgent","headers","navigator"],"mappings":";;;;;AACA,SAASA,GAAT,QAAoB,sBAApB,C,CACA;;AACA,OAAO,qCAAP,C,CAA6C;;AAE7C,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AAEA,eAAe,MAAMC,KAAN,SAAoBF,GAApB,CAAwB;AACrC,eAAaG,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAA7B,EAAyD;AACvD,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIH,SAAS,CAACD,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACD;;AAED,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEJ,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAA2B,KAAKE,KAAtC;AAEA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAnBoC;;AAuBvC,MAAMG,SAAmB,GAAG,MACxB,MAAC,GAAD;AACI,EAAA,MAAM,EAAC,aADX,CACyB;AADzB;AAEI,EAAA,MAAM,EAAEC,QAAQ,IAAIA,QAAQ,CAACC,MAFjC,CAEyC;AAFzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ;;AAOAF,SAAS,CAACP,eAAV,GAA4B,OAAO;AAAEU,EAAAA;AAAF,CAAP,KAAmB;AAC3C,QAAMC,SAAS,GAAGD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAY,YAAZ,KAA6B,EAAhC,GAAqCC,SAAS,CAACF,SAApE;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACH,CAHD;;AAIA,eAAeJ,SAAf","sourcesContent":["import { NextPage } from 'next';\r\nimport { RUG } from 'react-upload-gallery'\r\n// Add style manually\r\nimport 'react-upload-gallery/dist/style.css' // or scss\r\n\r\nimport React from 'react'\r\nimport App, { Container } from 'next/app'\r\n\r\nexport default class MyApp extends App {\r\n  static async getInitialProps({ Component, router, ctx }) {\r\n    let pageProps = {}\r\n\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx)\r\n    }\r\n\r\n    return { pageProps }\r\n  }\r\n\r\n  render () {\r\n    const { Component, pageProps } = this.props\r\n\r\n    return (\r\n      <Container>\r\n        <Component {...pageProps} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst IndexPage: NextPage = () => (\r\n    <RUG\r\n        action=\"/api/upload\" // upload route\r\n        source={response => response.source} // response image source\r\n    />\r\n);\r\n\r\nIndexPage.getInitialProps = async ({ req }) => {\r\n    const userAgent = req ? req.headers['user-agent'] || '' : navigator.userAgent;\r\n    return { userAgent };\r\n};\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}